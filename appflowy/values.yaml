# Default values for appflowy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # -- image repo for the appflowy cloud image
  repository: appflowyinc/appflowy_cloud
  # -- image pullPolicy, set to Always if using latest tag
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  # ref: https://hub.docker.com/r/appflowyinc/appflowy_cloud/tags
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

appflowy:
  # -- set environment
  environment: "production"
  gotrue:
    # -- set the admin email for gotrue
    adminEmail: ""
    # -- set the admin password for gotrue - ignored if appflowy.gotrue.existingSecret is not empty
    adminPassword: ""
    # -- gotrue ext URL
    extUrl: ""
    # -- set the JWT secret for gotrue
    jwtSecret: ""
    # -- use an existing secret for gotrue info
    existingSecret: ""
  s3:
    # -- the access key ID for your S3 endpoint
    accessKeyId: ""
    # -- the secret access key for your S3 endpoint
    secretAccessKey: ""
    # -- your S3 endpoint
    endpoint: "http://minio:9000"
    # -- region your S3 bucket is in
    region: ""
    # --  S3 bucket for appflowy to use
    bucket: ""
    # -- whether or not to use minio
    useMinio: false
    # -- use an existing secret for s3 credentials
    existingSecret: ""
  # -- set the log level for rust
  rustLog: "info"

  adminFrontend:
    # -- whether or not to deploy the admin frontend
    enabled: true
    image:
      # -- docker repository for the admin frontend
      repository: appflowyinc/admin_frontend
      # -- image pullPolicy for the admin frontend. set to Always if using latest tag
      pullPolicy: IfNotPresent
      # -- image tag to use for the admin frontend container
      # ref: https://hub.docker.com/r/appflowyinc/admin_frontend/tags
      tag: v0.0.1
    # -- service for the appflowy admin frontend
    service:
      type: ClusterIP
      port: 80
      targetPort: 8000

# -- service for appflowy_cloudy
service:
  type: ClusterIP
  port: 80
  targetPort: 3000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
